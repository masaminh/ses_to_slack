name: build-and-deploy
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main    
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install awscli
        run: |
          python -m pip install --upgrade pip
          pip install awscli
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
          role-duration-seconds: 1200
          role-session-name: SessionName
      - name: Install dependencies
        run: npm install
      - name: Copy config
        run: |
          aws s3 sync ${{ secrets.CONFIG_URI }} config
      - name: Copy testdata
        run: |
          aws s3 sync ${{ secrets.UNITTESTDATA_URI }} testdata
      - name: Test
        run: npm run test
      - name: Upload coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
          role-duration-seconds: 1200
          role-session-name: SessionName
      - name: Install dependencies
        run: npm install
      - name: Copy config
        run: |
          aws s3 sync ${{ secrets.CONFIG_URI }} config
      - name: Deploy
        if: startsWith(github.ref, 'refs/heads/main')
        run: npm run deploy:prod -- --role-arn ${{ secrets.AWS_DEPLOY_ROLE }} 
